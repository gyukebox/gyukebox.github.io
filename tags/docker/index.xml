<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on GyuLog</title>
    <link>https://gyukebox.github.io/tags/docker/</link>
    <description>Recent content in Docker on GyuLog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Mon, 23 Jul 2018 18:00:55 +0900</lastBuildDate>
    
	<atom:link href="https://gyukebox.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Django 어플리케이션 Docker 에 올리기</title>
      <link>https://gyukebox.github.io/blog/django-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-docker-%EC%97%90-%EC%98%AC%EB%A6%AC%EA%B8%B0/</link>
      <pubDate>Mon, 23 Jul 2018 18:00:55 +0900</pubDate>
      
      <guid>https://gyukebox.github.io/blog/django-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-docker-%EC%97%90-%EC%98%AC%EB%A6%AC%EA%B8%B0/</guid>
      <description>들어가며 시작하기 전에: 도커(Docker) 란? Dockerfile, 그리고 .dockerignore 시작하기 전에: Nginx, 그리고 uWSGI Nginx 랑 uWSGI 설정하기 build/nginx.conf 파일을 다음과 같이 작성한다.
upstream django { server unix:/home/ubuntu/uwsgi/app.sock; } server { listen 80 default_server; server_name localhost; charset utf-8; client_max_body_size 75M; error_log /home/ubuntu/uwsgi/nginx.error_log; location / { include /home/ubuntu/uwsgi/uwsgi_params; uwsgi_pass django; } }  build/supervisor.conf 파일을 다음과 같이 작성한다.
build/uwsgi.ini 파일을 다음과 같이 작성한다.
build/uwsgi_params 파일을 다음과 같이 작성한다.
Dockerfile 작성하기 프로젝트의 루트에 Dockerfile 을 다음과 같이 작성한다.</description>
    </item>
    
  </channel>
</rss>